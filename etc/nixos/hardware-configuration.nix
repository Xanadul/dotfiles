# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "uas" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ "amdgpu" ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/83f02609-13e1-4d2b-95c0-9abd1d66369f";
      fsType = "ext4";
    };

#  fileSystems."/mnt/AI-HDD" =
#    { device = "/dev/disk/by-uuid/3909692a-d849-40d6-8197-69755e0163af";
#      fsType = "ext4";
#    };
#  fileSystems."/mnt/BackupHDD" =
#    { device = "/dev/disk/by-uuid/8182bdeb-e789-43cd-8211-854c5216f0d0";
#      fsType = "ext4";
#    };
#
  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/64D5-6D13";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  # swapDevices =
  #   [ { device = "/dev/disk/by-uuid/a8ceb69e-c0f4-4352-9de9-8f10df40a227"; }
  #   ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp8s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
