# vim:fileencoding=utf-8:foldmethod=marker

include dracula.conf
#: Fonts {{{

#: kitty has very powerful font management. You can configure
#: individual font faces and even specify special fonts for particular
#: characters.

font_family      Jetbrains Mono
bold_font        auto
italic_font      auto
bold_italic_font auto

#: You can specify different fonts for the bold/italic/bold-italic
#: variants. To get a full list of supported fonts use the `kitty
#: +list-fonts` command. By default they are derived automatically, by
#: the OSes font system. When bold_font or bold_italic_font is set to
#: auto on macOS, the priority of bold fonts is semi-bold, bold,
#: heavy. Setting them manually is useful for font families that have
#: many weight variants like Book, Medium, Thick, etc. For example::

#:     font_family      Operator Mono Book
#:     bold_font        Operator Mono Medium
#:     italic_font      Operator Mono Book Italic
#:     bold_italic_font Operator Mono Medium Italic

font_size 20.0

#: Font size (in pts)


disable_ligatures cursor

window_border_width 3.0pt

cursor_shape block

cursor_blink_interval 0

placement_strategy bottom-left


confirm_os_window_close 0

background_opacity 0.80


shell_integration no-cursor

#: Enable shell integration on supported shells. This enables features
#: such as jumping to previous prompts, browsing the output of the
#: previous command in a pager, etc. on supported shells. Set to
#: disabled to turn off shell integration, completely. It is also
#: possible to disable individual features, set to a space separated
#: list of these values: no-rc, no-cursor, no-title, no-cwd, no-
#: prompt-mark, no-complete. See Shell integration
#: <https://sw.kovidgoyal.net/kitty/shell-integration/> for details.

# clear_all_shortcuts no

# map alt+r layout_action rotate
#
# # New Windows
# map alt+p>left      launch --location=vsplit --cwd=current
# map alt+p>left  move_window left
# map alt+p>down      launch --location=hsplit --cwd=current
# map alt+p>up        launch --location=hsplit --cwd=current
# map alt+p>right     launch --location=vsplit --cwd=current
# map alt+p>alt+left  launch --location=vsplit --cwd=current
# map alt+p>alt+down  launch --location=hsplit --cwd=current
# map alt+p>alt+up    launch --location=hsplit --cwd=current
# map alt+p>alt+right launch --location=vsplit --cwd=current
#
# # Move focus
# focus_follows_mouse true
#
# map alt+left  neighboring_window left
# map alt+down  neighboring_window down
# map alt+up    neighboring_window up
# map alt+right neighboring_window right
#
#
# # Move window
# map shift+alt+left  move_window left
# map shift+alt+down  move_window down
# map shift+alt+up    move_window up
# map shift+alt+right move_window right
#
# # Resize Windows
# map ctrl+alt+left  resize_window left
# map ctrl+alt+down  resize_window down
# map ctrl+alt+up    resize_window up
# map ctrl+alt+right resize_window right
#
# # Tabs
# tab_bar_edge top
#
# tab_bar_style powerline
# # fade, slant, seperator, powerline, custom, hidden
#
# tab_bar_align left
# # left, right, center
#
# map alt+t        new_tab
# map alt+ctrl+tab previous_tab
# map alt+tab      next_tab



enabled_layouts splits

#: The full list of actions that can be mapped to key presses is
#: available here <https://sw.kovidgoyal.net/kitty/actions/>.

# kitty_mod ctrl+shift

#: Special modifier key alias for default shortcuts. You can change
#: the value of this option to alter all default shortcuts that use
#: kitty_mod.

# clear_all_shortcuts no

#: Remove all shortcut definitions up to this point. Useful, for
#: instance, to remove the default shortcuts.

# map kitty_mod+c copy_to_clipboard
# map cmd+c       copy_to_clipboard

# map kitty_mod+v paste_from_clipboard
# map cmd+v       paste_from_clipboard


map f5 load_config_file

